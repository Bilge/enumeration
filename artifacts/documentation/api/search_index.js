var search_data = {
    'index': {
        'searchIndex': ["eloquent","eloquent\\enumeration","eloquent\\enumeration\\exception","eloquent\\enumeration\\abstractenumeration","eloquent\\enumeration\\abstractmultiton","eloquent\\enumeration\\abstractvaluemultiton","eloquent\\enumeration\\enumerationinterface","eloquent\\enumeration\\exception\\abstractundefinedmemberexception","eloquent\\enumeration\\exception\\extendsconcreteexception","eloquent\\enumeration\\exception\\undefinedmemberexception","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface","eloquent\\enumeration\\multitoninterface","eloquent\\enumeration\\valuemultitoninterface","eloquent\\enumeration\\abstractmultiton::memberbykey","eloquent\\enumeration\\abstractmultiton::memberbykeywithdefault","eloquent\\enumeration\\abstractmultiton::memberornullbykey","eloquent\\enumeration\\abstractmultiton::memberby","eloquent\\enumeration\\abstractmultiton::memberbywithdefault","eloquent\\enumeration\\abstractmultiton::memberornullby","eloquent\\enumeration\\abstractmultiton::memberbypredicate","eloquent\\enumeration\\abstractmultiton::memberbypredicatewithdefault","eloquent\\enumeration\\abstractmultiton::members","eloquent\\enumeration\\abstractmultiton::membersby","eloquent\\enumeration\\abstractmultiton::membersbypredicate","eloquent\\enumeration\\abstractmultiton::__callstatic","eloquent\\enumeration\\abstractmultiton::key","eloquent\\enumeration\\abstractmultiton::anyof","eloquent\\enumeration\\abstractmultiton::anyofarray","eloquent\\enumeration\\abstractmultiton::__tostring","eloquent\\enumeration\\abstractvaluemultiton::memberbyvalue","eloquent\\enumeration\\abstractvaluemultiton::memberbyvaluewithdefault","eloquent\\enumeration\\abstractvaluemultiton::memberornullbyvalue","eloquent\\enumeration\\abstractvaluemultiton::membersbyvalue","eloquent\\enumeration\\abstractvaluemultiton::value","eloquent\\enumeration\\exception\\abstractundefinedmemberexception::__construct","eloquent\\enumeration\\exception\\abstractundefinedmemberexception::classname","eloquent\\enumeration\\exception\\abstractundefinedmemberexception::property","eloquent\\enumeration\\exception\\abstractundefinedmemberexception::value","eloquent\\enumeration\\exception\\extendsconcreteexception::__construct","eloquent\\enumeration\\exception\\extendsconcreteexception::classname","eloquent\\enumeration\\exception\\extendsconcreteexception::parentclass","eloquent\\enumeration\\exception\\undefinedmemberexception::__construct","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface::classname","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface::property","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface::value","eloquent\\enumeration\\multitoninterface::key","eloquent\\enumeration\\multitoninterface::anyof","eloquent\\enumeration\\multitoninterface::anyofarray","eloquent\\enumeration\\multitoninterface::__tostring","eloquent\\enumeration\\valuemultitoninterface::value"],
        'info': [["Eloquent","","Eloquent.html","","",3],["Eloquent\\Enumeration","","Eloquent\/Enumeration.html","","",3],["Eloquent\\Enumeration\\Exception","","Eloquent\/Enumeration\/Exception.html","","",3],["AbstractEnumeration","Eloquent\\Enumeration","Eloquent\/Enumeration\/AbstractEnumeration.html"," < AbstractValueMultiton","Abstract base class for C++ style enumerations.",1],["AbstractMultiton","Eloquent\\Enumeration","Eloquent\/Enumeration\/AbstractMultiton.html","","Abstract base class for Java-style enumerations.",1],["AbstractValueMultiton","Eloquent\\Enumeration","Eloquent\/Enumeration\/AbstractValueMultiton.html"," < AbstractMultiton","Abstract base class for Java-style enumerations with",1],["EnumerationInterface","Eloquent\\Enumeration","Eloquent\/Enumeration\/EnumerationInterface.html","","The interface implemented by C++ style enumeration",1],["AbstractUndefinedMemberException","Eloquent\\Enumeration\\Exception","Eloquent\/Enumeration\/Exception\/AbstractUndefinedMemberException.html"," < Exception","An abstract base class for implementing undefined member",1],["ExtendsConcreteException","Eloquent\\Enumeration\\Exception","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html"," < Exception","The supplied member extends an already concrete base",1],["UndefinedMemberException","Eloquent\\Enumeration\\Exception","Eloquent\/Enumeration\/Exception\/UndefinedMemberException.html"," < AbstractUndefinedMemberException","The requested member was not found.",1],["UndefinedMemberExceptionInterface","Eloquent\\Enumeration\\Exception","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html","","The interface implemented by exceptions that are thrown",1],["MultitonInterface","Eloquent\\Enumeration","Eloquent\/Enumeration\/MultitonInterface.html","","The interface implemented by Java-style enumeration",1],["ValueMultitonInterface","Eloquent\\Enumeration","Eloquent\/Enumeration\/ValueMultitonInterface.html","","The interface implemented by Java-style enumeration",1],["AbstractMultiton::memberByKey","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberByKey","(string $key, boolean|null $isCaseSensitive = null)","Returns a single member by string key.",2],["AbstractMultiton::memberByKeyWithDefault","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberByKeyWithDefault","(string $key, <a href=\"Eloquent\/Enumeration\/MultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\MultitonInterface\">MultitonInterface<\/abbr><\/a> $default = null, boolean|null $isCaseSensitive = null)","Returns a single member by string key.",2],["AbstractMultiton::memberOrNullByKey","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberOrNullByKey","(string|null $key, boolean|null $isCaseSensitive = null)","Returns a single member by string key.",2],["AbstractMultiton::memberBy","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberBy","(string $property, mixed $value, boolean|null $isCaseSensitive = null)","Returns a single member by comparison with the result",2],["AbstractMultiton::memberByWithDefault","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberByWithDefault","(string $property, mixed $value, <a href=\"Eloquent\/Enumeration\/MultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\MultitonInterface\">MultitonInterface<\/abbr><\/a> $default = null, boolean|null $isCaseSensitive = null)","Returns a single member by comparison with the result",2],["AbstractMultiton::memberOrNullBy","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberOrNullBy","(string $property, mixed $value, boolean|null $isCaseSensitive = null)","Returns a single member by comparison with the result",2],["AbstractMultiton::memberByPredicate","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberByPredicate","(<abbr title=\"Eloquent\\Enumeration\\callable\">callable<\/abbr> $predicate)","Returns a single member by predicate callback.",2],["AbstractMultiton::memberByPredicateWithDefault","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_memberByPredicateWithDefault","(<abbr title=\"Eloquent\\Enumeration\\callable\">callable<\/abbr> $predicate, <a href=\"Eloquent\/Enumeration\/MultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\MultitonInterface\">MultitonInterface<\/abbr><\/a> $default = null)","Returns a single member by predicate callback.",2],["AbstractMultiton::members","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_members","()","Returns an array of all members in this multiton.",2],["AbstractMultiton::membersBy","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_membersBy","(string $property, mixed $value, boolean|null $isCaseSensitive = null)","Returns a set of members by comparison with the result",2],["AbstractMultiton::membersByPredicate","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_membersByPredicate","(<abbr title=\"Eloquent\\Enumeration\\callable\">callable<\/abbr> $predicate)","Returns a set of members by predicate callback.",2],["AbstractMultiton::__callStatic","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method___callStatic","(string $key, array $arguments)","Maps static method calls to members.",2],["AbstractMultiton::key","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_key","()","Returns the string key of this member.",2],["AbstractMultiton::anyOf","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_anyOf","(<a href=\"Eloquent\/Enumeration\/MultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\MultitonInterface\">MultitonInterface<\/abbr><\/a> $a, <a href=\"Eloquent\/Enumeration\/MultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\MultitonInterface\">MultitonInterface<\/abbr><\/a> $b)","Check if this member is in the specified list of members.",2],["AbstractMultiton::anyOfArray","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method_anyOfArray","(array $values)","Check if this member is in the specified list of members.",2],["AbstractMultiton::__toString","Eloquent\\Enumeration\\AbstractMultiton","Eloquent\/Enumeration\/AbstractMultiton.html#method___toString","()","Returns a string representation of this member.",2],["AbstractValueMultiton::memberByValue","Eloquent\\Enumeration\\AbstractValueMultiton","Eloquent\/Enumeration\/AbstractValueMultiton.html#method_memberByValue","(mixed $value, boolean|null $isCaseSensitive = null)","Returns a single member by value.",2],["AbstractValueMultiton::memberByValueWithDefault","Eloquent\\Enumeration\\AbstractValueMultiton","Eloquent\/Enumeration\/AbstractValueMultiton.html#method_memberByValueWithDefault","(mixed $value, <a href=\"Eloquent\/Enumeration\/ValueMultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\ValueMultitonInterface\">ValueMultitonInterface<\/abbr><\/a> $default = null, boolean|null $isCaseSensitive = null)","Returns a single member by value.",2],["AbstractValueMultiton::memberOrNullByValue","Eloquent\\Enumeration\\AbstractValueMultiton","Eloquent\/Enumeration\/AbstractValueMultiton.html#method_memberOrNullByValue","(mixed|null $value, boolean|null $isCaseSensitive = null)","Returns a single member by value.",2],["AbstractValueMultiton::membersByValue","Eloquent\\Enumeration\\AbstractValueMultiton","Eloquent\/Enumeration\/AbstractValueMultiton.html#method_membersByValue","(mixed $value, boolean|null $isCaseSensitive = null)","Returns a set of members matching the supplied value.",2],["AbstractValueMultiton::value","Eloquent\\Enumeration\\AbstractValueMultiton","Eloquent\/Enumeration\/AbstractValueMultiton.html#method_value","()","Returns the value of this member.",2],["AbstractUndefinedMemberException::__construct","Eloquent\\Enumeration\\Exception\\AbstractUndefinedMemberException","Eloquent\/Enumeration\/Exception\/AbstractUndefinedMemberException.html#method___construct","(string $message, string $className, string $property, mixed $value, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $cause = null)","Construct a new undefined member exception.",2],["AbstractUndefinedMemberException::className","Eloquent\\Enumeration\\Exception\\AbstractUndefinedMemberException","Eloquent\/Enumeration\/Exception\/AbstractUndefinedMemberException.html#method_className","()","Get the class name.",2],["AbstractUndefinedMemberException::property","Eloquent\\Enumeration\\Exception\\AbstractUndefinedMemberException","Eloquent\/Enumeration\/Exception\/AbstractUndefinedMemberException.html#method_property","()","Get the property name.",2],["AbstractUndefinedMemberException::value","Eloquent\\Enumeration\\Exception\\AbstractUndefinedMemberException","Eloquent\/Enumeration\/Exception\/AbstractUndefinedMemberException.html#method_value","()","Get the value of the property used to search for the",2],["ExtendsConcreteException::__construct","Eloquent\\Enumeration\\Exception\\ExtendsConcreteException","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html#method___construct","(string $className, string $parentClass, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $cause = null)","Construct a new extends concrete exception.",2],["ExtendsConcreteException::className","Eloquent\\Enumeration\\Exception\\ExtendsConcreteException","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html#method_className","()","Get the class name of the supplied member.",2],["ExtendsConcreteException::parentClass","Eloquent\\Enumeration\\Exception\\ExtendsConcreteException","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html#method_parentClass","()","Get the parent class name.",2],["UndefinedMemberException::__construct","Eloquent\\Enumeration\\Exception\\UndefinedMemberException","Eloquent\/Enumeration\/Exception\/UndefinedMemberException.html#method___construct","(string $className, string $property, mixed $value, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $cause = null)","Construct a new undefined member exception.",2],["UndefinedMemberExceptionInterface::className","Eloquent\\Enumeration\\Exception\\UndefinedMemberExceptionInterface","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html#method_className","()","Get the class name.",2],["UndefinedMemberExceptionInterface::property","Eloquent\\Enumeration\\Exception\\UndefinedMemberExceptionInterface","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html#method_property","()","Get the property name.",2],["UndefinedMemberExceptionInterface::value","Eloquent\\Enumeration\\Exception\\UndefinedMemberExceptionInterface","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html#method_value","()","Get the value of the property used to search for the",2],["MultitonInterface::key","Eloquent\\Enumeration\\MultitonInterface","Eloquent\/Enumeration\/MultitonInterface.html#method_key","()","Returns the string key of this member.",2],["MultitonInterface::anyOf","Eloquent\\Enumeration\\MultitonInterface","Eloquent\/Enumeration\/MultitonInterface.html#method_anyOf","(<a href=\"Eloquent\/Enumeration\/MultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\MultitonInterface\">MultitonInterface<\/abbr><\/a> $a, <a href=\"Eloquent\/Enumeration\/MultitonInterface.html\"><abbr title=\"Eloquent\\Enumeration\\MultitonInterface\">MultitonInterface<\/abbr><\/a> $b)","Check if this member is in the specified list of members.",2],["MultitonInterface::anyOfArray","Eloquent\\Enumeration\\MultitonInterface","Eloquent\/Enumeration\/MultitonInterface.html#method_anyOfArray","(array $values)","Check if this member is in the specified list of members.",2],["MultitonInterface::__toString","Eloquent\\Enumeration\\MultitonInterface","Eloquent\/Enumeration\/MultitonInterface.html#method___toString","()","Returns a string representation of this member.",2],["ValueMultitonInterface::value","Eloquent\\Enumeration\\ValueMultitonInterface","Eloquent\/Enumeration\/ValueMultitonInterface.html#method_value","()","Returns the value of this member.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']