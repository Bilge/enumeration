var search_data = {
    'index': {
        'searchIndex': ["eloquent","eloquent\\enumeration","eloquent\\enumeration\\exception","eloquent\\enumeration\\enumeration","eloquent\\enumeration\\exception\\extendsconcreteexception","eloquent\\enumeration\\exception\\undefinedmemberexception","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface","eloquent\\enumeration\\multiton","eloquent\\enumeration\\enumeration::memberbyvalue","eloquent\\enumeration\\enumeration::memberbyvaluewithdefault","eloquent\\enumeration\\enumeration::value","eloquent\\enumeration\\exception\\extendsconcreteexception::__construct","eloquent\\enumeration\\exception\\extendsconcreteexception::classname","eloquent\\enumeration\\exception\\extendsconcreteexception::parentclass","eloquent\\enumeration\\exception\\undefinedmemberexception::__construct","eloquent\\enumeration\\exception\\undefinedmemberexception::classname","eloquent\\enumeration\\exception\\undefinedmemberexception::property","eloquent\\enumeration\\exception\\undefinedmemberexception::value","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface::classname","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface::property","eloquent\\enumeration\\exception\\undefinedmemberexceptioninterface::value","eloquent\\enumeration\\multiton::members","eloquent\\enumeration\\multiton::memberbykey","eloquent\\enumeration\\multiton::memberbykeywithdefault","eloquent\\enumeration\\multiton::memberby","eloquent\\enumeration\\multiton::memberbywithdefault","eloquent\\enumeration\\multiton::memberbypredicate","eloquent\\enumeration\\multiton::memberbypredicatewithdefault","eloquent\\enumeration\\multiton::__callstatic","eloquent\\enumeration\\multiton::key","eloquent\\enumeration\\multiton::anyof","eloquent\\enumeration\\multiton::anyofarray","eloquent\\enumeration\\multiton::__tostring"],
        'info': [["Eloquent","","Eloquent.html","","",3],["Eloquent\\Enumeration","","Eloquent\/Enumeration.html","","",3],["Eloquent\\Enumeration\\Exception","","Eloquent\/Enumeration\/Exception.html","","",3],["Enumeration","Eloquent\\Enumeration","Eloquent\/Enumeration\/Enumeration.html"," < Multiton","Abstract base class for C++ style enumerations.",1],["ExtendsConcreteException","Eloquent\\Enumeration\\Exception","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html"," < LogicException","The supplied member extends an already concrete base",1],["UndefinedMemberException","Eloquent\\Enumeration\\Exception","Eloquent\/Enumeration\/Exception\/UndefinedMemberException.html"," < LogicException","The requested member was not found.",1],["UndefinedMemberExceptionInterface","Eloquent\\Enumeration\\Exception","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html","","The interface implemented by exceptions that are thrown",1],["Multiton","Eloquent\\Enumeration","Eloquent\/Enumeration\/Multiton.html","","Base class for Java-style enumerations.",1],["Enumeration::memberByValue","Eloquent\\Enumeration\\Enumeration","Eloquent\/Enumeration\/Enumeration.html#method_memberByValue","(scalar $value, boolean|null $isCaseSensitive = null)","Returns a single member by value.",2],["Enumeration::memberByValueWithDefault","Eloquent\\Enumeration\\Enumeration","Eloquent\/Enumeration\/Enumeration.html#method_memberByValueWithDefault","(scalar $value, <a href=\"Eloquent\/Enumeration\/Multiton.html\"><abbr title=\"Eloquent\\Enumeration\\Multiton\">Multiton<\/abbr><\/a> $default = null, boolean|null $isCaseSensitive = null)","Returns a single member by value.",2],["Enumeration::value","Eloquent\\Enumeration\\Enumeration","Eloquent\/Enumeration\/Enumeration.html#method_value","()","Returns the value of this member.",2],["ExtendsConcreteException::__construct","Eloquent\\Enumeration\\Exception\\ExtendsConcreteException","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html#method___construct","(string $className, string $parentClass, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","Construct a new extends concrete exception.",2],["ExtendsConcreteException::className","Eloquent\\Enumeration\\Exception\\ExtendsConcreteException","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html#method_className","()","Get the class name of the supplied member.",2],["ExtendsConcreteException::parentClass","Eloquent\\Enumeration\\Exception\\ExtendsConcreteException","Eloquent\/Enumeration\/Exception\/ExtendsConcreteException.html#method_parentClass","()","Get the parent class name.",2],["UndefinedMemberException::__construct","Eloquent\\Enumeration\\Exception\\UndefinedMemberException","Eloquent\/Enumeration\/Exception\/UndefinedMemberException.html#method___construct","(string $className, string $property, mixed $value, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","Construct a new undefined member exception.",2],["UndefinedMemberException::className","Eloquent\\Enumeration\\Exception\\UndefinedMemberException","Eloquent\/Enumeration\/Exception\/UndefinedMemberException.html#method_className","()","Get the class name.",2],["UndefinedMemberException::property","Eloquent\\Enumeration\\Exception\\UndefinedMemberException","Eloquent\/Enumeration\/Exception\/UndefinedMemberException.html#method_property","()","Get the property name.",2],["UndefinedMemberException::value","Eloquent\\Enumeration\\Exception\\UndefinedMemberException","Eloquent\/Enumeration\/Exception\/UndefinedMemberException.html#method_value","()","Get the value of the property used to search for the",2],["UndefinedMemberExceptionInterface::className","Eloquent\\Enumeration\\Exception\\UndefinedMemberExceptionInterface","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html#method_className","()","Get the class name.",2],["UndefinedMemberExceptionInterface::property","Eloquent\\Enumeration\\Exception\\UndefinedMemberExceptionInterface","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html#method_property","()","Get the property name.",2],["UndefinedMemberExceptionInterface::value","Eloquent\\Enumeration\\Exception\\UndefinedMemberExceptionInterface","Eloquent\/Enumeration\/Exception\/UndefinedMemberExceptionInterface.html#method_value","()","Get the value of the property used to search for the",2],["Multiton::members","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_members","()","Returns an array of all members in this multiton.",2],["Multiton::memberByKey","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_memberByKey","(string $key, boolean|null $isCaseSensitive = null)","Returns a single member by string key.",2],["Multiton::memberByKeyWithDefault","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_memberByKeyWithDefault","(string $key, <a href=\"Eloquent\/Enumeration\/Multiton.html\"><abbr title=\"Eloquent\\Enumeration\\Multiton\">Multiton<\/abbr><\/a> $default = null, boolean|null $isCaseSensitive = null)","Returns a single member by string key.",2],["Multiton::memberBy","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_memberBy","(string $property, mixed $value, boolean|null $isCaseSensitive = null)","Returns a single member by comparison with the result",2],["Multiton::memberByWithDefault","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_memberByWithDefault","(string $property, mixed $value, <a href=\"Eloquent\/Enumeration\/Multiton.html\"><abbr title=\"Eloquent\\Enumeration\\Multiton\">Multiton<\/abbr><\/a> $default = null, boolean|null $isCaseSensitive = null)","Returns a single member by comparison with the result",2],["Multiton::memberByPredicate","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_memberByPredicate","(<abbr title=\"Eloquent\\Enumeration\\callback\">callback<\/abbr> $predicate)","Returns a single member by predicate callback.",2],["Multiton::memberByPredicateWithDefault","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_memberByPredicateWithDefault","(<abbr title=\"Eloquent\\Enumeration\\callback\">callback<\/abbr> $predicate, <a href=\"Eloquent\/Enumeration\/Multiton.html\"><abbr title=\"Eloquent\\Enumeration\\Multiton\">Multiton<\/abbr><\/a> $default = null)","Returns a single member by predicate callback.",2],["Multiton::__callStatic","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method___callStatic","(string $key, array $arguments)","Maps static method calls to members.",2],["Multiton::key","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_key","()","Returns the string key of this member.",2],["Multiton::anyOf","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_anyOf","(<a href=\"Eloquent\/Enumeration\/Multiton.html\"><abbr title=\"Eloquent\\Enumeration\\Multiton\">Multiton<\/abbr><\/a> $a, <a href=\"Eloquent\/Enumeration\/Multiton.html\"><abbr title=\"Eloquent\\Enumeration\\Multiton\">Multiton<\/abbr><\/a> $b)","Check if this member is in the specified list of members.",2],["Multiton::anyOfArray","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method_anyOfArray","(array $values)","Check if this member is in the specified list of members.",2],["Multiton::__toString","Eloquent\\Enumeration\\Multiton","Eloquent\/Enumeration\/Multiton.html#method___toString","()","Returns a string representation of this member.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']